이진힙의 자료 구조까지 들어왔다. 트리를 끝내고 복습을 하고 이 부분을 넘어갈까 하다가, 어짜피 백준 문제를 풀고있으니 풀면서 복습을 한다고 생각하고 계속해서 진도를 먼저 나간다.


🖋 24 이진 힙(Binary Heaps)


🖊 24.1 힙 (Heaps) 소개


힙은 기본적으로 트리의 일종이다.

[최대 이진 힙]
각 부모가 최대 두 개의 자식
최대 이진 힙에서 부모의 노드값이 자식보다 언제나 더 큼
형제 사이에선 보장되지 않음
이진힙은 언제나 최적의 용량을 가짐 (-> 데이터 추가에 한계가 있음)
왼쪽 자식이 가장먼저 채워짐

[최소 이진 힙]
최대 이진힙의 반대 개념

[왜 이걸 배워야할까?]
1. 우선순위 큐를 코딩하는 법을 배우는데, 그때 아주 많이 사용된다.
2. 그래프 순회에서 자주 사용된다.


🖊 24.2 힙 (Heaps) 정렬

배열 안에 있는 모든 인덱스에 대해 왼쪽 자식은 2n+1에 저장되어있고,
오른쪽 아이는 2n+2에 저장되어있음

자식 노드를 가지고 부모노드를 알아내려면 (n-1)/2 floor


🖊 24.3,4 힙 : Insert 메소드 소개, 솔루션

[의사 코드]
1. insert라는 이름의 메소드를 하나 만듦 값을 하나 받음
2. 값을 버블하고 제대로된 자리를 찾아준다.

[버블업 코드]
1. 마지막 인덱스 자리, 즉 배열의 맨 뒤 맨 마지막에 있는 요소를 가지고 옴
2. 추가가 되면 그 부모의 자리를 찾음.
3. 인덱스 -1 을 2로 나누고 그 값을 floor
4. 그러면 부모의 인덱스가 나오는데 그 값과 맨뒤에 추가한 값을 비교
5. 어떤 것이 더 큰지 확인해보고 추가한 값이 크다면 바꿔줌,그렇지 않다면 그대로
6. 해당 과정 반복

루트의 부모가 없으니 이 부분은 처리해서 오류나지 않도록


🖊 24.5,6 힙 : ExtractMax 메소드 소개, 솔루션

일반적으로 제거를 많이 하는 곳은 루트 자리다.
최대 이진 힙 - 가장 큰 값, 최대값을 제거한다는 말임


[의사 코드] - 제거 혹은 최대값 추출 - Extractmax or remove function
1. 마지막 요소와 첫번째 요소를 바꾼다.
2. 마지막 요소를 제거하고 return
3. sink down 함수를 통해 제대로 된 자리에 수가 있도록 만들어 준다.
    1. 부모 인덱스는 0부터 시작(root)
    2. 오른쪽 요소와 왼쪽 요소의 인덱스를 찾고 빈 공간이 아닌지 확인한다.
    3. 만약 오른쪽 혹은 왼쪽 요소가 element보다 크다면 교환, 둘다 크다면 left 와 right비교해서 더 큰쪽으로 교환한다.
    4. 자리를 바꾼 자식의 인덱스를 새로운 부모 인덱스로 설정해주고 새로운 자식을 찾는다.
    5. 이 과정을 반복해서 루프를 돌고 자리를 바꿈
    6. 두 자식이 해당 요소보다 더 크지 않을때까지 반복한 후, 루트에 올렸던 요소가 제 자리를 찾을때 까지 sink down 실시
4. 원래의 루트 출력



🖊 24.7 우선 순위 큐(Queue) 소개

[우선순위큐란?]
각 요소가 그에 해당하는 우선순위를 가지는 데이터 구조
그리고 더 높은 우선순위를 가진 요소가 더 낮은 우선순위를 가진 요소보다 먼저 처리됨

우선순위 큐는 힙과는 별개의 추상적 개념


🖊 24.8,9 우선 순위 큐(Queue) 의사코드, 솔루션

큐 클래스는 이진 힙과 동일하게 거의 작성함.

노드 클래스를 추가해줘야 하는데 프로퍼티로 val 과 priority가 들어감
priority로 값 비교

최소이진힙이랑 좀 잘맞음.

[의사 코드]
1. 최소 이진 힙을 만든다. - 낮은 숫자가 높은 우선순위를 의미
2. 각 노드는 val 과 priority를 가지고 있다. 힙을 만드는데 우선순위를 사용하기
3. enqueue - 무언가를 입력하는 경우 우선순위를 비교해야함.
4. denqueue - 무언가를 제거할때도 루트를 제거함. 가장 뒤의것과 자리바꾸고 싱크다운 혹은 퍼콜레이트 실행


🖊 24.10 이진 힙의 빅오(BIG O)

최대든 최소든 삽입과 삭제에서 뛰어난 성능을 보임

삽입 - O(log N)
제거 - O(log N)
검색 - O(N)


🧢 Recap
1. 이진 힙은 그 자체로도 유용하지만 우선순위 큐와 같은 다른 데이터 구조를 코딩하는데도 유용하다.
2. 이진힙은 최대 이진힙과 최소 이진 힙으로 나뉨
3. 한 노드가 최대 두개의 자식을 가지고 모든 부모가 자식보다 크거나 작음(최대 최소) - 그래서 한쪽으로 치우친 트리는 나오지 않음
4. 약간의 수학 공식을 사용하면 배열을 이용해서 만들 수 있으나 시간에서 손해를 본다.


📍P.S.
이진힙은 보글보글하면서도 정신없다. 무슨말이냐면 무조건 복습 1순위의 내용이다. 다양한 구조 중  코드를 제일 길게 쳐본것 같다.


🏷 Tags
#유데미 #유데미코리아 #스타트위드유데미 #스터디윗미 #코딩공부 #코딩 #유데미강의 #알고리즘 #자바스크립트 #개발자취업 #startwithudemy
